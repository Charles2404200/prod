# ---
# - hosts: all
#   become: true
#   vars:
#     #docker_host: "unix://var/run/docker.sock"
#     docker_compose_version: "v2.21.0"
#   pre_tasks:
#     - name: Ensure docker group exists
#       ansible.builtin.group:
#         name: docker
#         state: present

#     - name: Add ec2-user to the docker group
#       ansible.builtin.user:
#         name: ec2-user
#         groups: docker
#         append: yes

#     - name: Force a new SSH connection to apply group changes
#       meta: reset_connection

#     - name: Remove curl-minimal to avoid conflicts
#       package:
#         name: curl-minimal
#         state: absent
#       ignore_errors: yes

#   roles:
#     - docker

# # - hosts: staging:prod
# #   become: true
# #   roles:
# #     - node_exporter
# #     - cadvisor
# #     - nginx_exporter

# - hosts: staging
#   become: yes
#   roles:
#     # - docker #currently redundant
#     - node_exporter

# - hosts: monitoring
#   become: true
#   roles:
#     - monitoring_stack

# - hosts: staging
#   become: true
#   roles:
#     - { role: nginx }
#     - { role: app_deploy }

# - hosts: prod
#   become: true
#   roles:
#     - { role: nginx }
#     - { role: app_deploy }

- hosts: all
  become: true
  vars:
    docker_compose_version: "v2.21.0"
  pre_tasks:
    - name: Ensure docker group exists
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add ec2-user to the docker group
      ansible.builtin.user:
        name: ec2-user
        groups: docker
        append: yes

    - name: Force a new SSH connection to apply group changes
      meta: reset_connection

    - name: Remove curl-minimal to avoid conflicts
      package:
        name: curl-minimal
        state: absent
      ignore_errors: yes

  roles:
    - docker
# ...
- hosts: staging
  become: yes
  roles:
    - node_exporter
# ...