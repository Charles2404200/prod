---
- name: Ensure deploy dir
  ansible.builtin.file:
    path: "{{ deploy_root | default('/opt/rmit') }}"
    state: directory
    mode: "0755"

# Make sure the Swarm manager (your Jenkins EC2) can pull from GHCR
- name: Docker login to GHCR as root (for Swarm pulls)
  become: true
  ansible.builtin.shell: |
    set -e
    echo "{{ ghcr_token }}" | docker login ghcr.io -u "{{ ghcr_user }}" --password-stdin
  args:
    executable: /bin/bash
  when:
    - ghcr_user is defined
    - ghcr_token is defined

- name: Render Swarm stack file
  ansible.builtin.template:
    src: docker-stack.yml.j2
    dest: "{{ deploy_root | default('/opt/rmit') }}/docker-stack.yml"
    mode: "0644"

- name: Deploy/update stack
  become: true
  ansible.builtin.shell: |
    set -e
    docker stack deploy -c "{{ deploy_root | default('/opt/rmit') }}/docker-stack.yml" "{{ stack_name | default('rmit') }}"
  args:
    executable: /bin/bash
  register: _stack_deploy
  changed_when: "'Updating service' in _stack_deploy.stdout or 'Creating service' in _stack_deploy.stdout"

# Small pause to let Swarm schedule tasks
- name: Pause briefly after deploy
  ansible.builtin.pause:
    seconds: 5

# Wait until the backend port is open (TCP only â€” no HTTP probe)
- name: Wait for backend port 13000 to open
  ansible.builtin.wait_for:
    host: 127.0.0.1
    port: 13000
    state: started
    timeout: 180

# Optional: show services/tasks for visibility
- name: Show Swarm services
  ansible.builtin.shell: docker service ls
  register: _svc
  changed_when: false

- name: Print Swarm services
  ansible.builtin.debug:
    var: _svc.stdout_lines
