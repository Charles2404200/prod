---
- name: Ensure deploy dir
  ansible.builtin.file:
    path: "{{ deploy_root | default('/opt/rmit') }}"
    state: directory
    mode: "0755"

# Make sure the Swarm manager (your Jenkins EC2) can pull from GHCR
- name: Docker login to GHCR as root (for Swarm pulls)
  become: true
  ansible.builtin.shell: |
    set -e
    echo "{{ ghcr_token }}" | docker login ghcr.io -u "{{ ghcr_user }}" --password-stdin
  args:
    executable: /bin/bash
  when:
    - ghcr_user is defined
    - ghcr_token is defined

- name: Render Swarm stack file
  ansible.builtin.template:
    src: docker-stack.yml.j2
    dest: "{{ deploy_root | default('/opt/rmit') }}/docker-stack.yml"
    mode: "0644"

- name: Deploy/update stack
  become: true
  ansible.builtin.shell: |
    docker stack deploy -c "{{ deploy_root | default('/opt/rmit') }}/docker-stack.yml" "{{ stack_name | default('rmit') }}"
  args:
    executable: /bin/bash
  changed_when: false

# Wait until the backend port is open
- name: Wait for backend port 13000 to open
  ansible.builtin.wait_for:
    host: 127.0.0.1
    port: 13000
    timeout: 120

# Probe backend health on common paths, succeed when any returns 200
- name: Probe backend health on common paths until one returns 200
  vars:
    paths:
      - "{{ backend_health_path | default('/health') }}"
      - "/api/health"
  block:
    - name: Try each candidate path
      ansible.builtin.uri:
        url: "http://127.0.0.1:13000{{ item }}"
        status_code: 200
        return_content: yes
      register: health_checks
      failed_when: false
      loop: "{{ paths }}"

    - name: Pick the first 200 result (if any)
      ansible.builtin.set_fact:
        backend_health_result: >-
          {{ (health_checks.results
              | selectattr('status','defined')
              | selectattr('status','equalto',200)
              | list | first) | default({}) }}

    - name: Fail if none succeeded
      ansible.builtin.fail:
        msg: >-
          Backend health failed. Tried: {{ paths }}.
          Statuses: {{ health_checks.results | map(attribute='status') | list }}
          Bodies: {{ health_checks.results | map(attribute='content') | list }}
      when: backend_health_result == {}
  retries: 30
  delay: 2
  until: backend_health_result != {}
