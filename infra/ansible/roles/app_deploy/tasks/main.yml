---
# roles/app_deploy/tasks/main.yml

- name: "Ensure deploy dirs"
  become: true
  file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ deploy_root }}"
    - "{{ deploy_root }}/backend"

- name: "Render backend env"
  become: true
  template:
    src: "env.{{ env }}{% if env == 'prod' %}-{{ color }}{% endif %}.j2"
    dest: "{{ deploy_root }}/backend/.env"
    mode: "0600"

- name: "Copy compose file (choose by env/color)"
  become: true
  copy:
    src: >-
      {{ 'compose-staging.yml'
         if env == 'staging'
         else ('compose-' ~ (color | default('blue')) ~ '.yml') }}
    dest: "{{ deploy_root }}/docker-compose.yml"
    mode: "0644"

- name: "Set compose environment file (ports/images)"
  become: true
  copy:
    dest: "{{ deploy_root }}/.env"
    mode: "0644"
    content: |
      FRONTEND_IMAGE={{ frontend_image }}
      BACKEND_IMAGE={{ backend_image }}
      IMAGE_TAG={{ image_tag }}
      BACKEND_STAGING_PORT={{ backend_staging_port }}
      BACKEND_BLUE_PORT={{ backend_blue_port }}
      BACKEND_GREEN_PORT={{ backend_green_port }}

- name: "Deploy stack"
  become: true
  community.docker.docker_compose:
    project_src: "{{ deploy_root }}"
    files:
      - "{{ deploy_root }}/docker-compose.yml"
    pull: always
    state: present

# -------- Health probe --------
- name: "Compute backend health URL"
  set_fact:
    probe_host: "{{ staging_domain | default('54.87.144.232') }}"
    probe_port: >-
      {{ (env == 'staging')
         | ternary(backend_staging_port,
                   ((color | default('blue')) == 'blue')
                   | ternary(backend_blue_port, backend_green_port)) }}
    probe_url: "http://{{ probe_host }}:{{ probe_port }}{{ backend_health_path }}"

- name: "Wait for backend health"
  uri:
    url: "{{ probe_url }}"
    status_code: 200
  register: health
  retries: 30
  delay: 2
  until: health.status == 200

- name: "Reload Nginx (prod: switch take effect)"
  when: env == 'prod'
  become: true
  service:
    name: nginx
    state: reloaded
