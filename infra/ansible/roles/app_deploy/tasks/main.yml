---
- name: Ensure deploy dir
  ansible.builtin.file:
    path: "{{ deploy_root | default('/opt/rmit') }}"
    state: directory
    mode: "0755"

# Make sure the Swarm manager (your Jenkins EC2) can pull from GHCR
- name: Docker login to GHCR as root (for Swarm pulls)
  become: true
  ansible.builtin.shell: |
    set -e
    echo "{{ ghcr_token }}" | docker login ghcr.io -u "{{ ghcr_user }}" --password-stdin
  args:
    executable: /bin/bash
  when:
    - ghcr_user is defined
    - ghcr_token is defined

- name: Render Swarm stack file
  ansible.builtin.template:
    src: docker-stack.yml.j2
    dest: "{{ deploy_root | default('/opt/rmit') }}/docker-stack.yml"
    mode: "0644"

- name: Deploy/update stack
  become: true
  ansible.builtin.shell: |
    docker stack deploy -c "{{ deploy_root | default('/opt/rmit') }}/docker-stack.yml" "{{ stack_name | default('rmit') }}"
  args:
    executable: /bin/bash
  changed_when: false

# Wait until the backend port is open
- name: Wait for backend port 13000 to open
  ansible.builtin.wait_for:
    host: 127.0.0.1
    port: 13000
    timeout: 120

# Build a shared list of candidate health paths
- name: Set health check paths
  ansible.builtin.set_fact:
    health_paths:
      - "{{ backend_health_path | default('/health') }}"
      - "/api/health"

# Try each path; keep retrying until any returns 200
- name: Probe backend health until one path returns 200
  ansible.builtin.uri:
    url: "http://127.0.0.1:13000{{ item }}"
    status_code: 200
    return_content: yes
  register: _health
  failed_when: false
  loop: "{{ health_paths }}"
  until: >
    (_health.results | default([]))
    | selectattr('status','defined')
    | selectattr('status','equalto',200)
    | list | length > 0
  retries: 30
  delay: 2

# Fail with details if none succeeded
- name: Fail with details if backend never became healthy
  ansible.builtin.assert:
    that:
      - (_health.results | default([]))
        | selectattr('status','defined')
        | selectattr('status','equalto',200)
        | list | length > 0
    fail_msg: >-
      Backend health failed. Tried: {{ health_paths }}.
      Statuses: {{ _health.results | map(attribute='status') | list }}
      Bodies: {{ _health.results | map(attribute='content') | list }}