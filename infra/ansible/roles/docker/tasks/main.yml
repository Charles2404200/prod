---
# Keep it boring & reliable on Amazon Linux 2023

- name: Ensure base packages
  become: true
  package:
    name:
      - git
      - tar
      - curl-minimal
    state: present
  failed_when: false

- name: Remove conflicting curl if present
  become: true
  package:
    name: curl
    state: absent
  ignore_errors: true

- name: Install Docker (pkg first)
  become: true
  package:
    name: docker
    state: present
  register: docker_pkg
  failed_when: false

- name: Install Docker via convenience script (fallback)
  become: true
  shell: curl -fsSL https://get.docker.com | sh
  args: { executable: /bin/bash }
  when: docker_pkg is failed

- name: Configure daemon.json
  become: true
  copy:
    dest: /etc/docker/daemon.json
    mode: "0644"
    content: |
      {
        "log-driver": "json-file",
        "log-opts": { "max-size": "10m", "max-file": "3" },
        "exec-opts": ["native.cgroupdriver=systemd"]
      }
  notify: Restart docker

- name: Enable & start Docker
  become: true
  service:
    name: docker
    state: started
    enabled: true

- name: Add user to docker group
  become: true
  user:
    name: "{{ ansible_user | default('ec2-user') }}"
    groups: docker
    append: true

- name: Install docker compose plugin (pkg)
  become: true
  package:
    name: docker-compose-plugin
    state: present
  register: compose_pkg
  failed_when: false

- name: Ensure docker compose v2 (download fallback)
  become: true
  get_url:
    url: "https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-linux-x86_64"
    dest: "/usr/libexec/docker/cli-plugins/docker-compose"
    mode: "0755"
  when: compose_pkg is failed

- name: Verify docker & compose
  become: true
  shell: |
    set -e
    docker --version
    docker compose version
  register: docker_versions
  changed_when: false

- name: Print docker versions
  debug:
    var: docker_versions.stdout_lines

# Handlers
- name: Restart docker
  become: true
  service:
    name: docker
    state: restarted
