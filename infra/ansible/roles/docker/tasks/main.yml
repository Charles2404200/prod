---
# roles/docker/tasks/main.yml

# --- 0) Base packages (avoid curl conflicts on Amazon Linux) ------------------

- name: Ensure base packages (git, tar)
  become: true
  package:
    name:
      - git
      - tar
    state: present

# Amazon Linux (incl. AL2023) ships curl-minimal; keep that to avoid conflicts
- name: Ensure curl present on Amazon Linux (curl-minimal)
  become: true
  dnf:
    name: curl-minimal
    state: present
  when: ansible_distribution == "Amazon"

# Other distros can use the normal 'curl' package safely
- name: Ensure curl present on non-Amazon distros
  become: true
  package:
    name: curl
    state: present
  when: ansible_distribution != "Amazon"

# --- 1) Docker engine (package preferred; fallback to convenience script) -----

- name: Install Docker engine via package if available
  become: true
  package:
    name: docker
    state: present
  register: docker_pkg
  failed_when: false

- name: Install Docker via convenience script (fallback)
  become: true
  shell: curl -fsSL https://get.docker.com | sh
  args:
    executable: /bin/bash
  when: docker_pkg is failed

# --- 2) Daemon configuration ---------------------------------------------------

- name: Write /etc/docker/daemon.json
  become: true
  copy:
    dest: /etc/docker/daemon.json
    mode: "0644"
    content: |
      {
        "log-driver": "json-file",
        "log-opts": { "max-size": "10m", "max-file": "3" },
        "exec-opts": ["native.cgroupdriver=systemd"],
        "max-concurrent-downloads": 10,
        "max-concurrent-uploads": 10
      }
  notify: Restart docker

# --- 3) Enable/Start Docker; add user to docker group -------------------------

- name: Enable & start Docker
  become: true
  service:
    name: docker
    state: started
    enabled: true

- name: Add user to docker group
  become: true
  user:
    name: "{{ docker_user | default(ansible_user_id) }}"
    groups: docker
    append: true

# --- 4) Docker Compose v2 (pkg if possible; otherwise plugin binary) ----------

- name: Install docker compose plugin via package if present
  become: true
  package:
    name: docker-compose-plugin
    state: present
  register: compose_pkg
  failed_when: false

- name: Ensure CLI plugins dir exists
  become: true
  file:
    path: "{{ docker_cli_plugins_dir | default('/usr/libexec/docker/cli-plugins') }}"
    state: directory
    mode: "0755"

- name: Install docker compose v2 plugin (fallback binary)
  become: true
  get_url:
    url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version | default('v2.27.0') }}/docker-compose-linux-x86_64"
    dest: "{{ docker_cli_plugins_dir | default('/usr/libexec/docker/cli-plugins') }}/docker-compose"
    mode: "0755"
  when: compose_pkg is failed

- name: Ensure legacy docker-compose symlink (optional)
  become: true
  file:
    src: "{{ docker_cli_plugins_dir | default('/usr/libexec/docker/cli-plugins') }}/docker-compose"
    dest: /usr/local/bin/docker-compose
    state: link

# --- 5) Verify ----------------------------------------------------------------

- name: Show docker versions
  become: true
  shell: |
    docker --version && docker compose version
  register: docker_versions
  changed_when: false

- name: Print docker versions
  debug:
    var: docker_versions.stdout_lines
