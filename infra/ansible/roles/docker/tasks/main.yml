---
- name: Ensure base packages
  package:
    name:
      - curl
      - git
      - tar
      - python3-pip
    state: present

# 1) Docker engine (pkg first, fallback to convenience script)
- name: Install Docker engine via package if available
  package:
    name: docker
    state: present
  register: docker_pkg
  failed_when: false

- name: Install Docker via convenience script (fallback)
  shell: curl -fsSL https://get.docker.com | sh
  args:
    executable: /bin/bash
  when: docker_pkg is failed

# 2) Daemon config
- name: Write /etc/docker/daemon.json
  copy:
    dest: /etc/docker/daemon.json
    mode: "0644"
    content: |
      {
        "log-driver": "json-file",
        "log-opts": { "max-size": "10m", "max-file": "3" },
        "exec-opts": ["native.cgroupdriver=systemd"],
        "max-concurrent-downloads": 10,
        "max-concurrent-uploads": 10
      }
  notify: restart docker   # notify handler defined in handlers/main.yml

# 3) Enable/Start Docker, grant user
- name: Enable & start Docker
  service:
    name: docker
    state: started
    enabled: true

- name: Add jenkins user to docker group (if exists)
  user:
    name: jenkins
    groups: docker
    append: true
  ignore_errors: true

# 4) Docker Compose v2 (pkg if possible; otherwise plugin binary)
- name: Install docker compose plugin via package if present
  package:
    name: docker-compose-plugin
    state: present
  register: compose_pkg
  failed_when: false

- name: Ensure CLI plugins dir exists
  file:
    path: "/usr/libexec/docker/cli-plugins"
    state: directory
    mode: "0755"

- name: Install docker compose v2 plugin (fallback binary)
  get_url:
    url: "https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-linux-x86_64"
    dest: "/usr/libexec/docker/cli-plugins/docker-compose"
    mode: "0755"
  when: compose_pkg is failed
  ignore_errors: true

- name: Ensure legacy docker-compose symlink (optional)
  file:
    src: "/usr/libexec/docker/cli-plugins/docker-compose"
    dest: /usr/local/bin/docker-compose
    state: link

# 5) Verify versions
- name: Show docker versions
  shell: |
    docker --version && docker compose version
  register: docker_versions
  changed_when: false

- name: Print docker versions
  debug:
    var: docker_versions.stdout_lines

# 6) Init swarm + overlay network
- name: Init swarm (idempotent)
  shell: |
    docker info | grep -q 'Swarm: active' || \
    docker swarm init --advertise-addr "$(hostname -I | awk '{print $1}')"
  args:
    executable: /bin/bash
    warn: false
  register: swarm_init
  changed_when: swarm_init.rc == 0

- name: Create overlay network if missing
  shell: |
    docker network inspect rmit_net >/dev/null 2>&1 || \
    docker network create --driver overlay rmit_net
  args:
    executable: /bin/bash
    warn: false
