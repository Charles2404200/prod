---
# roles/docker/tasks/main.yml

# --- sensible defaults if not passed in -e ---
- name: Set role defaults
  set_fact:
    docker_user: "{{ docker_user | default(ansible_user_id) }}"
    docker_compose_version: "{{ docker_compose_version | default('v2.27.0') }}"
    docker_cli_plugins_dir: >-
      {{ docker_cli_plugins_dir
         | default( (ansible_facts.os_family in ['RedHat','Rocky','AlmaLinux','Amazon'])
                     | ternary('/usr/libexec/docker/cli-plugins','/usr/lib/docker/cli-plugins') ) }}

# --- base packages (handle Amazon Linux 2023 curl-minimal conflict) ---
- name: Ensure git & tar are present
  become: true
  package:
    name:
      - git
      - tar
    state: present

- name: Amazon Linux 2023 | ensure curl-minimal present
  become: true
  package:
    name: curl-minimal
    state: present
  when:
    - ansible_facts.distribution == "Amazon"
    - ansible_facts.distribution_version is search('2023')

- name: Amazon Linux 2023 | ensure conflicting curl is absent
  become: true
  package:
    name: curl
    state: absent
  when:
    - ansible_facts.distribution == "Amazon"
    - ansible_facts.distribution_version is search('2023')

- name: Non-Amazon-2023 | ensure curl present
  become: true
  package:
    name: curl
    state: present
  when: not (ansible_facts.distribution == "Amazon"
             and (ansible_facts.distribution_version is search('2023')))

# --- Docker engine (pkg first, convenience script fallback) ---
- name: Install Docker engine via package if available
  become: true
  package:
    name: docker
    state: present
  register: docker_pkg
  failed_when: false

- name: Install Docker via convenience script (fallback)
  become: true
  shell: curl -fsSL https://get.docker.com | sh
  args:
    executable: /bin/bash
  when: docker_pkg is failed

# --- daemon.json (log rotation, cgroup driver, faster pulls) ---
- name: Write /etc/docker/daemon.json
  become: true
  copy:
    dest: /etc/docker/daemon.json
    mode: "0644"
    content: |
      {
        "log-driver": "json-file",
        "log-opts": { "max-size": "10m", "max-file": "3" },
        "exec-opts": ["native.cgroupdriver=systemd"],
        "max-concurrent-downloads": 10,
        "max-concurrent-uploads": 10
      }
  notify: Restart docker

# --- enable/start & group membership ---
- name: Enable & start Docker
  become: true
  service:
    name: docker
    state: started
    enabled: true

- name: Add user to docker group
  become: true
  user:
    name: "{{ docker_user }}"
    groups: docker
    append: true

# --- Docker Compose v2 (pkg if possible; otherwise download plugin) ---
- name: Install docker compose plugin via package if present
  become: true
  package:
    name: docker-compose-plugin
    state: present
  register: compose_pkg
  failed_when: false

- name: Ensure CLI plugins dir exists
  become: true
  file:
    path: "{{ docker_cli_plugins_dir }}"
    state: directory
    mode: "0755"

- name: Install docker compose v2 plugin (fallback binary)
  become: true
  get_url:
    url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-linux-x86_64"
    dest: "{{ docker_cli_plugins_dir }}/docker-compose"
    mode: "0755"
  when: compose_pkg is failed

- name: Ensure legacy docker-compose symlink (optional)
  become: true
  file:
    src: "{{ docker_cli_plugins_dir }}/docker-compose"
    dest: /usr/local/bin/docker-compose
    state: link

# --- apply any pending handler notifications before verify ---
- name: Apply pending handler notifications now
  meta: flush_handlers

# --- verify ---
- name: Show docker versions
  become: true
  shell: |
    docker --version && docker compose version
  register: docker_versions
  changed_when: false

- name: Print docker versions
  debug:
    var: docker_versions.stdout_lines
