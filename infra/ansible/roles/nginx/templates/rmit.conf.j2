# Host NGINX fronting Docker Swarm. It proxies to services published on localhost.

map $http_upgrade $connection_upgrade { default upgrade; '' close; }
limit_req_zone $binary_remote_addr zone=api_rate:{{ api_rate_zone_size | default('10m') }} rate={{ api_rate | default('10r/s') }};

server {
  listen 80 default_server;
  server_name _;

  # Frontend at /
  location / {
    proxy_pass http://127.0.0.1:{{ frontend_published | default(18080) }};
    proxy_http_version 1.1;
    proxy_set_header Host              $host;
    proxy_set_header X-Forwarded-Host  $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_read_timeout 60s;
  }

  # Cache static assets
  location ~* \.(?:js|css|png|jpg|jpeg|gif|ico|svg|woff2?)$ {
    expires 7d;
    add_header Cache-Control "public, max-age=604800, immutable";
    proxy_pass http://127.0.0.1:{{ frontend_published | default(18080) }};
  }

  # Backend API under /api â†’ forwards to BE published port 13000 (strips /api/)
  location /api/ {
    limit_req zone=api_rate burst={{ api_burst | default(20) }} nodelay;
    proxy_pass http://127.0.0.1:{{ backend_published | default(13000) }}/;
    proxy_http_version 1.1;
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        $connection_upgrade;
    proxy_read_timeout 120s;
  }

  location = /nginx-health { access_log off; return 200 "ok"; }
}
