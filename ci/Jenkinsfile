pipeline {
  agent any

  parameters {
    string(name: 'BRANCH_TO_BUILD', defaultValue: 'ansible-prod', description: 'Branch to build')
  }

  environment {
    APP_NAME = 'rmit-store'
    REPO_URL = 'https://github.com/Charles2404200/prod'

    HOST_IP   = '34.227.19.111'
    HOST_USER = 'ec2-user'

    BACKEND_IMAGE  = 'rmit-store-backend'
    FRONTEND_IMAGE = 'rmit-store-frontend'
    DB_IMAGE       = 'rmit-store-db'
    IMAGE_TAG      = 'latest'
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: "${params.BRANCH_TO_BUILD}", url: "${env.REPO_URL}"
      }
    }

    stage('Build Docker Images') {
      steps {
        sh """
          echo "[docker] build backend"
          docker build -t ${env.BACKEND_IMAGE}:${env.IMAGE_TAG} -f ci/Dockerfile.backend .

          echo "[docker] build frontend"
          docker build -t ${env.FRONTEND_IMAGE}:${env.IMAGE_TAG} -f ci/Dockerfile.frontend .

          echo "[docker] build db"
          docker build -t ${env.DB_IMAGE}:${env.IMAGE_TAG} -f ci/Dockerfile.db .
        """
      }
    }

    stage('Deploy to Host with Ansible') {
      steps {
        withCredentials([
          sshUserPrivateKey(credentialsId: 'ansible-ec2-key', keyFileVariable: 'SSH_KEY')
        ]) {
          sh """
            echo "[ssh] copy repo to host"
            rsync -avz -e "ssh -o StrictHostKeyChecking=no -i ${SSH_KEY}" ./ ${env.HOST_USER}@${env.HOST_IP}:/home/${env.HOST_USER}/deploy

            echo "[ssh] run ansible"
            ssh -o StrictHostKeyChecking=no -i ${SSH_KEY} ${env.HOST_USER}@${env.HOST_IP} '
              cd ~/deploy/infra/ansible
              ansible-playbook -i inventory.ini site.yml --limit lb
            '
          """
        }
      }
    }
  }

  post {
    success {
      echo "✅ ${env.APP_NAME} built & deployed on ${env.HOST_IP}"
    }
    failure {
      echo "❌ Pipeline failed, check console"
    }
  }
}
